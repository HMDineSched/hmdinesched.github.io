<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Fellowship Square Schedule</title>
  <style>
    body {
      font-family: sans-serif;
      margin: 0;
      padding: 1rem;
      background: #f9f9f9;
    }
    h1 {
      text-align: center;
    }
    .selectors {
      display: flex;
      justify-content: center;
      gap: 1rem;
      margin-bottom: 1rem;
    }
    .quick-view {
      background: #fff;
      border: 1px solid #ccc;
      padding: 1rem;
      margin-bottom: 2rem;
      max-width: 600px;
      margin-left: auto;
      margin-right: auto;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 2rem;
    }
    th, td {
      border: 1px solid #ccc;
      padding: 0.5rem;
      text-align: left;
    }
    th {
      background: #eee;
    }
    .location-header {
      margin-top: 2rem;
    }
  </style>
</head>
<body>
  <h1>Fellowship Square Schedule</h1>

  <div class="selectors">
    <label for="date-picker">Select Date:</label>
    <input type="date" id="date-picker" />
    <label for="location-select">Select Location:</label>
    <select id="location-select">
      <option value="East">East</option>
      <option value="West/Grand">West/Grand</option>
      <option value="Oasis">Oasis</option>
    </select>
  </div>

  <div class="quick-view" id="quick-view">
    <h3>Quick View: <span id="quick-view-date"></span> – <span id="quick-view-location"></span></h3>
    <ul id="quick-view-list"></ul>
  </div>

  <div id="schedule-tables"></div>

  <script>
    const rawData = [
      { name: 'Nathan', time: '10a–CL', location: 'East', date: '2025-06-22' }, // Sunday
      { name: 'Brandon', time: '2p–10', location: 'East', date: '2025-06-23' }, // Monday
      { name: 'Eli', time: '6:30a–3p', location: 'Oasis', date: '2025-06-23' },
      { name: 'Marcial', time: '10a–CL', location: 'Oasis', date: '2025-06-24' }, // Tuesday
      { name: 'Jerry', time: '10–CL', location: 'West/Grand', date: '2025-06-24' }, // Tuesday Buffet rule
      { name: 'Lisa', time: '9a–1p', location: 'East', date: '2025-06-25' }, // Wednesday
      { name: 'December', time: '12–8', location: 'tbd', date: '2025-06-26' }, // Thursday
      { name: 'Melissa', time: '2–10', location: 'East', date: '2025-06-27' }, // Friday
      { name: 'Megan', time: '11a–7p', location: 'East', date: '2025-06-28' }, // Saturday
      { name: 'Caitlyn', time: '10a–4p', location: 'Office', date: '2025-06-28' } // should be skipped
    ];

    function getAZTodayDate() {
      const now = new Date();
      const utc = now.getTime() + now.getTimezoneOffset() * 60000;
      const azTime = new Date(utc - (7 * 60 * 60000)); // Arizona = UTC-7
      return new Date(azTime.getFullYear(), azTime.getMonth(), azTime.getDate());
    }

    function formatDate(dateStr) {
      const date = new Date(dateStr);
      const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
      return `${days[date.getDay()]} ${date.getMonth() + 1}/${date.getDate()}`;
    }

    function groupByLocationAndDate(data) {
      const grouped = {};
      for (const entry of data) {
        if (entry.location === 'Office') continue;
        const loc = entry.location || 'tbd';
        if (!grouped[loc]) grouped[loc] = {};
        if (!grouped[loc][entry.date]) grouped[loc][entry.date] = [];
        grouped[loc][entry.date].push({ name: entry.name, time: entry.time });
      }
      return grouped;
    }

    function buildTables(data) {
      const container = document.getElementById('schedule-tables');
      container.innerHTML = '';
      const grouped = groupByLocationAndDate(data);

      for (const location in grouped) {
        const locHeader = document.createElement('h2');
        locHeader.className = 'location-header';
        locHeader.textContent = `Location: ${location}`;
        container.appendChild(locHeader);

        const table = document.createElement('table');
        const thead = document.createElement('thead');
        const headRow = document.createElement('tr');
        headRow.innerHTML = '<th>Date</th><th>Name</th><th>Time</th>';
        thead.appendChild(headRow);
        table.appendChild(thead);

        const tbody = document.createElement('tbody');
        const entries = grouped[location];
        const sortedDates = Object.keys(entries).sort();

        for (const date of sortedDates) {
          for (const shift of entries[date]) {
            const row = document.createElement('tr');
            row.innerHTML = `<td>${formatDate(date)}</td><td>${shift.name}</td><td>${shift.time}</td>`;
            tbody.appendChild(row);
          }
        }

        table.appendChild(tbody);
        container.appendChild(table);
      }
    }

    function updateQuickView() {
      const location = document.getElementById('location-select').value;
      const dateStr = document.getElementById('date-picker').value;
      const [year, month, day] = dateStr.split('-').map(Number);
      const selectedDate = new Date(year, month - 1, day);
      const isoDate = selectedDate.toISOString().slice(0, 10);

      document.getElementById('quick-view-date').textContent = formatDate(isoDate);
      document.getElementById('quick-view-location').textContent = location;

      const list = document.getElementById('quick-view-list');
      list.innerHTML = '';

      const filtered = rawData.filter(
        entry => entry.date === isoDate && entry.location === location
      );

      for (const entry of filtered) {
        const li = document.createElement('li');
        li.textContent = `${entry.name}: ${entry.time}`;
        list.appendChild(li);
      }
    }

    document.addEventListener('DOMContentLoaded', () => {
      const azToday = getAZTodayDate();
      const iso = azToday.toISOString().split('T')[0];
      document.getElementById('date-picker').value = iso;

      document.getElementById('date-picker').addEventListener('change', updateQuickView);
      document.getElementById('location-select').addEventListener('change', updateQuickView);

      buildTables(rawData);
      updateQuickView();
    });
  </script>
</body>
</html>
